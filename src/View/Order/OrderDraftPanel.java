/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Order;

import DTOService.Constanst;
import DTOService.GeneralMethod;
import View.BHPanel;
import View.MainJFrame;
import controller.Orders.OrderController;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.DTO.DisplayOrderInfoDTO;
import model.DTO.OrderDTO;
import model.DTO.OrderDisplay;
import model.File.Theme;

/**
 *
 * @author Jarvis
 */
public class OrderDraftPanel extends javax.swing.JPanel {

    private MainJFrame mainJFrame;
    private BHPanel bhPanel;
    OrderController OR = new OrderController();
    DefaultTableModel orderModel;
    GeneralMethod GM = new GeneralMethod();

    List<OrderDTO> listOrderDTO = new ArrayList<>();
    String codeOrder = "";
    JPopupMenu popupMenu = new JPopupMenu();

    /**
     * Creates new form OrderDraftPanel
     */
    public OrderDraftPanel(MainJFrame mainJFrame, BHPanel bhPanel) {
        initComponents();

        //khai set mau
        Theme theme = MainJFrame.listTheme.get(0);
        draftTable.getTableHeader().setOpaque(false);
        draftTable.getTableHeader().setBackground(Color.decode(theme.getBackgroundTittleTable()));

        this.mainJFrame = mainJFrame;
        this.bhPanel = bhPanel;
        orderModel = (DefaultTableModel) draftTable.getModel();
//        showOrderTable(OR.getListOrder("DEPT"));
        showOrderTable(OR.getListOrder(Constanst.ORDER_DRAFT, null, null, null));

        JMenuItem detailItem = new JMenuItem("Tạo lại ");
        JMenuItem deleteItem = new JMenuItem("Xóa ");
        popupMenu.add(detailItem);
        popupMenu.add(deleteItem);

        detailItem.addActionListener((e) -> {
            // chuột phải chi tiết

            BHPanel Bh = new BHPanel(mainJFrame);
            OrderPanel.codeOrderDraft = codeOrder;
            GM.showPanel(this.bhPanel.returnBHPanel(), new OrderPanel(this.mainJFrame));

        });
        deleteItem.addActionListener((e) -> {
            deleteOdrer(codeOrder);
        });
        draftTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent evt) {
                int r = draftTable.rowAtPoint(evt.getPoint());
                if (r >= 0 && r < draftTable.getRowCount()) {
                    draftTable.setRowSelectionInterval(r, r);
                } else {
                    draftTable.clearSelection();
                }
            }

        });

    }

    private void setColor() {
        Theme theme = MainJFrame.listTheme.get(0);
        draftTable.getTableHeader().setOpaque(false);
        draftTable.getTableHeader().setBackground(Color.decode(theme.getBackgroundTittleTable()));
        this.setBackground(Color.decode(theme.getBackgroundMainPanel()));

    }

    public void showOrderTable(List<OrderDTO> list) {
        orderModel.setRowCount(0);
        int no = 1;
        for (OrderDTO lts : list) {
            orderModel.addRow(new Object[]{
                no++, lts.getCodeOrder(), lts.getNameKh(), lts.getCreatAt(), GM.doubleToDecimal(lts.getTongTien())
            });
        }
    }

    public void deleteOdrer(String codeOrder) {
        int opt = JOptionPane.showConfirmDialog(null, "Bạn có chắc xoá bản nháp này không?", "Xoá đơn nháp", JOptionPane.YES_NO_OPTION);
        if (opt == JOptionPane.YES_OPTION) {
            System.out.println("codeOrder " + codeOrder);
            // Integer total = SPController.getTotalSPDetail(codeSPDetailS.substring(0, 32));

            if (OR.deleteOdrer(codeOrder)) {
                JOptionPane.showMessageDialog(null, "Xoá thành công");
//                Integer total = SPController.getTotalSPDetail(codeOrder.substring(0, 32));
//                if (total == 0) {
//                    SPController.deleteSP(codeOrder.substring(0, 32));
//                }
                showOrderTable(OR.getListOrder(Constanst.ORDER_DRAFT, null, null, null));

            } else {
                JOptionPane.showMessageDialog(null, "Xoá thất bại");
            }

        } else {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        draftTable = new javax.swing.JTable();

        draftTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã hóa đơn", "Tên khách hàng", "Ngày tạo", "Tổng Tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        draftTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                draftTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(draftTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 890, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void draftTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_draftTableMouseClicked
        // TODO add your handling code here:
        if (SwingUtilities.isRightMouseButton(evt)) {
            int i = draftTable.getSelectedRow();
            codeOrder = "";
            codeOrder = orderModel.getValueAt(i, 1).toString();
            popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_draftTableMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable draftTable;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
